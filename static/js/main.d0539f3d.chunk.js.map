{"version":3,"sources":["TicketsData.js","TicketsGrid.js","TicketsTable.js","App.js","reportWebVitals.js","index.js"],"names":["rows","id","caseNo","caseStatus","createdDate","subject","columns","field","headerName","flex","sortable","disableColumnMenu","filterable","makeStyles","theme","container","height","padding","spacing","filters","display","flexDirection","alignItems","justifyContent","formControl","margin","width","useStyles","TicketsTable","classes","useState","filteredRows","setFilteredRows","caseNumberFilterValue","setCaseNumberFilterValue","caseStatusFilterValue","setCaseStatusFilterValue","caseSubjectFilterValue","setCaseSubjectFilterValue","console","log","useEffect","filter","row","Container","className","FormControl","variant","InputLabel","Select","labelId","value","onChange","e","target","label","MenuItem","map","index","self","indexOf","TableContainer","component","Paper","Table","table","aria-label","TableHead","TableRow","column","TableCell","TableBody","scope","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0539f3d.chunk.js","sourcesContent":["export const rows = [\r\n  {\r\n    id: 1,\r\n    caseNo: \"1222\",\r\n    caseStatus: \"OPEN\",\r\n    createdDate: \"02/05/2021 05:49:22 PM\",\r\n    subject: \"Connection Issue\",\r\n  },\r\n  {\r\n    id: 2,\r\n    caseNo: \"1151\",\r\n    caseStatus: \"Team Assigned\",\r\n    createdDate: \"02/04/2021 02:33:22 PM\",\r\n    subject: \"Connection Issue\",\r\n  },\r\n  {\r\n    id: 3,\r\n    caseNo: \"1149\",\r\n    caseStatus: \"OPEN\",\r\n    createdDate: \"02/01/2021 05:49:22 PM\",\r\n    subject: \"Connection Issue\",\r\n  },\r\n  {\r\n    id: 4,\r\n    caseNo: \"1132\",\r\n    caseStatus: \"OPEN\",\r\n    createdDate: \"01/22/2021 05:49:22 PM\",\r\n    subject: \"Issue with Payment\",\r\n  },\r\n  {\r\n    id: 5,\r\n    caseNo: \"1127\",\r\n    caseStatus: \"OPEN\",\r\n    createdDate: \"01/15/2021 05:49:22 PM\",\r\n    subject: \"Issue with Payment\",\r\n  },\r\n  {\r\n    id: 6,\r\n    caseNo: \"1120\",\r\n    caseStatus: \"OPEN\",\r\n    createdDate: \"01/16/2021 05:49:22 PM\",\r\n    subject: \"Connection Issue\",\r\n  },\r\n  {\r\n    id: 7,\r\n    caseNo: \"1114\",\r\n    caseStatus: \"OPEN\",\r\n    createdDate: \"02/05/2021 05:49:22 PM\",\r\n    subject: \"Connection Issue\",\r\n  },\r\n  {\r\n    id: 8,\r\n    caseNo: \"1234\",\r\n    caseStatus: \"Team Assigned\",\r\n    createdDate: \"02/05/2021 05:49:22 PM\",\r\n    subject: \"Issue with Payment\",\r\n  },\r\n  {\r\n    id: 9,\r\n    caseNo: \"1333\",\r\n    caseStatus: \"Team Assigned\",\r\n    createdDate: \"02/05/2021 05:49:22 PM\",\r\n    subject: \"Issue with Payment\",\r\n  },\r\n  {\r\n    id: 10,\r\n    caseNo: \"1444\",\r\n    caseStatus: \"OPEN\",\r\n    createdDate: \"02/05/2021 05:49:22 PM\",\r\n    subject: \"Connection Issue\",\r\n  },\r\n];\r\n\r\nexport const columns = [\r\n  {\r\n    field: \"caseNo\",\r\n    headerName: \"Case Number\",\r\n    flex: 1,\r\n    sortable: false,\r\n    disableColumnMenu: true,\r\n  },\r\n  {\r\n    field: \"caseStatus\",\r\n    headerName: \"Case Status\",\r\n    flex: 1,\r\n    sortable: false,\r\n    disableColumnMenu: true,\r\n  },\r\n  {\r\n    field: \"createdDate\",\r\n    headerName: \"Created Date\",\r\n    flex: 1,\r\n    filterable: false,\r\n    sortable: false,\r\n    disableColumnMenu: true,\r\n  },\r\n  {\r\n    field: \"subject\",\r\n    headerName: \"Subject\",\r\n    flex: 1,\r\n    sortable: false,\r\n    disableColumnMenu: true,\r\n  },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { rows, columns } from \"./TicketsData\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  makeStyles,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    padding: theme.spacing(1),\r\n  },\r\n  filters: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst TicketsGrid = () => {\r\n  const classes = useStyles();\r\n  const [caseNumberFilterValue, setCaseNumberFilterValue] = useState(\"\");\r\n  const [caseStatusFilterValue, setCaseStatusFilterValue] = useState(\"\");\r\n  const [caseSubjectFilterValue, setCaseSubjectFilterValue] = useState(\"\");\r\n\r\n  const filterModel = {\r\n    items: [\r\n      {\r\n        columnField: \"caseNo\",\r\n        operatorValue: \"contains\",\r\n        value: caseNumberFilterValue,\r\n      },\r\n      {\r\n        columnField: \"caseStatus\",\r\n        operatorValue: \"contains\",\r\n        value: caseStatusFilterValue,\r\n      },\r\n      {\r\n        columnField: \"subject\",\r\n        operatorValue: \"contains\",\r\n        value: caseSubjectFilterValue,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <div className={classes.filters}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"case-number-select-input-label\">\r\n            Case Number\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"case-number-select-label\"\r\n            id=\"case-number-select\"\r\n            value={caseNumberFilterValue}\r\n            onChange={(e) => setCaseNumberFilterValue(e.target.value)}\r\n            label=\"case-number\"\r\n          >\r\n            <MenuItem value=\"\">Please Select...</MenuItem>\r\n            {rows.map((row, index) => {\r\n              return (\r\n                <MenuItem value={row.caseNo} key={index}>\r\n                  {row.caseNo}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"case-status-select-input-label\">\r\n            Case Status\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"case-status-select-label\"\r\n            id=\"case-status-select\"\r\n            value={caseStatusFilterValue}\r\n            onChange={(e) => setCaseStatusFilterValue(e.target.value)}\r\n            label=\"case-status\"\r\n          >\r\n            <MenuItem value=\"\">Please Select...</MenuItem>\r\n            {rows\r\n              .map((row) => row.caseStatus)\r\n              .filter((value, index, self) => self.indexOf(value) === index)\r\n              .map((value, index) => {\r\n                return (\r\n                  <MenuItem value={value} key={index}>\r\n                    {value}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"case-subject-select-input-label\">\r\n            Case Subject\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"case-subject-select-label\"\r\n            id=\"case-subject-select\"\r\n            value={caseSubjectFilterValue}\r\n            onChange={(e) => setCaseSubjectFilterValue(e.target.value)}\r\n            label=\"case-subject\"\r\n          >\r\n            <MenuItem value=\"\">Please Select...</MenuItem>\r\n            {rows\r\n              .map((row) => row.subject)\r\n              .filter((value, index, self) => self.indexOf(value) === index)\r\n              .map((value, index) => {\r\n                return (\r\n                  <MenuItem value={value} key={index}>\r\n                    {value}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={5}\r\n        pagination\r\n        filterModel={filterModel}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TicketsGrid;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport { rows, columns } from \"./TicketsData\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  makeStyles,\r\n  Container,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    padding: theme.spacing(1),\r\n  },\r\n  filters: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst TicketsTable = () => {\r\n  const classes = useStyles();\r\n  const [filteredRows, setFilteredRows] = useState(rows);\r\n  const [caseNumberFilterValue, setCaseNumberFilterValue] = useState(\"\");\r\n  const [caseStatusFilterValue, setCaseStatusFilterValue] = useState(\"\");\r\n  const [caseSubjectFilterValue, setCaseSubjectFilterValue] = useState(\"\");\r\n\r\n  console.log(`caseNumberFilterValue : ${caseNumberFilterValue},\r\n  caseStatusFilterValue : ${caseStatusFilterValue},\r\n  caseSubjectFilterValue : ${caseSubjectFilterValue},`);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !caseNumberFilterValue &&\r\n      !caseStatusFilterValue &&\r\n      !caseSubjectFilterValue\r\n    ) {\r\n      setFilteredRows(rows);\r\n    }\r\n\r\n    if (\r\n      caseNumberFilterValue &&\r\n      !caseStatusFilterValue &&\r\n      !caseSubjectFilterValue\r\n    ) {\r\n      setFilteredRows(\r\n        rows.filter((row) => {\r\n          if (row.caseNo === caseNumberFilterValue) return row;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (\r\n      !caseNumberFilterValue &&\r\n      caseStatusFilterValue &&\r\n      !caseSubjectFilterValue\r\n    ) {\r\n      setFilteredRows(\r\n        rows.filter((row) => {\r\n          if (row.caseStatus === caseStatusFilterValue) return row;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (\r\n      !caseNumberFilterValue &&\r\n      !caseStatusFilterValue &&\r\n      caseSubjectFilterValue\r\n    ) {\r\n      setFilteredRows(\r\n        rows.filter((row) => {\r\n          if (row.subject === caseSubjectFilterValue) return row;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (\r\n      caseNumberFilterValue &&\r\n      caseStatusFilterValue &&\r\n      !caseSubjectFilterValue\r\n    ) {\r\n      setFilteredRows(\r\n        rows.filter((row) => {\r\n          if (\r\n            row.caseNo === caseNumberFilterValue &&\r\n            row.caseStatus === caseStatusFilterValue\r\n          )\r\n            return row;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (\r\n      !caseNumberFilterValue &&\r\n      caseStatusFilterValue &&\r\n      caseSubjectFilterValue\r\n    ) {\r\n      setFilteredRows(\r\n        rows.filter((row) => {\r\n          if (\r\n            row.caseStatus === caseStatusFilterValue &&\r\n            row.subject === caseSubjectFilterValue\r\n          )\r\n            return row;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (\r\n      caseNumberFilterValue &&\r\n      !caseStatusFilterValue &&\r\n      caseSubjectFilterValue\r\n    ) {\r\n      setFilteredRows(\r\n        rows.filter((row) => {\r\n          if (\r\n            row.caseNo === caseNumberFilterValue &&\r\n            row.subject === caseSubjectFilterValue\r\n          )\r\n            return row;\r\n        })\r\n      );\r\n    }\r\n\r\n    if (\r\n      caseNumberFilterValue &&\r\n      caseStatusFilterValue &&\r\n      caseSubjectFilterValue\r\n    ) {\r\n      setFilteredRows(\r\n        rows.filter((row) => {\r\n          if (\r\n            row.caseNo === caseNumberFilterValue &&\r\n            row.caseStatus === caseStatusFilterValue &&\r\n            row.subject === caseSubjectFilterValue\r\n          )\r\n            return row;\r\n        })\r\n      );\r\n    }\r\n  }, [caseNumberFilterValue, caseStatusFilterValue, caseSubjectFilterValue]);\r\n\r\n  console.log(filteredRows);\r\n  return (\r\n    <Container className={classes.container}>\r\n      <div className={classes.filters}>\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"case-number-select-input-label\">\r\n            Case Number\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"case-number-select-label\"\r\n            id=\"case-number-select\"\r\n            value={caseNumberFilterValue}\r\n            onChange={(e) => setCaseNumberFilterValue(e.target.value)}\r\n            label=\"case-number\"\r\n          >\r\n            <MenuItem value=\"\">Please Select...</MenuItem>\r\n            {rows.map((row, index) => {\r\n              return (\r\n                <MenuItem value={row.caseNo} key={index}>\r\n                  {row.caseNo}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"case-status-select-input-label\">\r\n            Case Status\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"case-status-select-label\"\r\n            id=\"case-status-select\"\r\n            value={caseStatusFilterValue}\r\n            onChange={(e) => setCaseStatusFilterValue(e.target.value)}\r\n            label=\"case-status\"\r\n          >\r\n            <MenuItem value=\"\">Please Select...</MenuItem>\r\n            {rows\r\n              .map((row) => row.caseStatus)\r\n              .filter((value, index, self) => self.indexOf(value) === index)\r\n              .map((value, index) => {\r\n                return (\r\n                  <MenuItem value={value} key={index}>\r\n                    {value}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n          <InputLabel id=\"case-subject-select-input-label\">\r\n            Case Subject\r\n          </InputLabel>\r\n          <Select\r\n            labelId=\"case-subject-select-label\"\r\n            id=\"case-subject-select\"\r\n            value={caseSubjectFilterValue}\r\n            onChange={(e) => setCaseSubjectFilterValue(e.target.value)}\r\n            label=\"case-subject\"\r\n          >\r\n            <MenuItem value=\"\">Please Select...</MenuItem>\r\n            {rows\r\n              .map((row) => row.subject)\r\n              .filter((value, index, self) => self.indexOf(value) === index)\r\n              .map((value, index) => {\r\n                return (\r\n                  <MenuItem value={value} key={index}>\r\n                    {value}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column, index) => {\r\n                return <TableCell key={index}>{column.headerName}</TableCell>;\r\n              })}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredRows !== null &&\r\n              filteredRows.map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.caseNo}\r\n                  </TableCell>\r\n                  <TableCell>{row.caseStatus}</TableCell>\r\n                  <TableCell>{row.createdDate}</TableCell>\r\n                  <TableCell>{row.subject}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TicketsTable;\r\n","import \"./App.css\";\nimport TicketsGrid from \"./TicketsGrid\";\nimport TicketsTable from \"./TicketsTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TicketsTable />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}